/* SETS */element_of(H,[H|_]).element_of(E,[_|T]) :- element_of(E,T).add_element(E,S,[E|S])./* RELATIONS */relation([]).relation([(_X,_Y)|T]) :- relation(T).not_partial_function(R) :- element_of((X,Y),R), element_of((X,Z),R), dif(Y,Z).partial_function(R) :- \+(not_partial_function(R)).override([],X,Y,[(X,Y)]).override([(X,_)|T],X,Y,[(X,Y)|T]).override([(V,W)|T],X,Y,[(V,W)|T2]) :- dif(X,V), override(T,X,Y,T2).in_domain(X,R) :- element_of((X,_),R).apply(X,R,Y) :- element_of((X,Y),R)./* TYPES */type(smith,name).type(miller,name).type(999,code).type(121,code).type(144,code)./* OPERATIONS */add(NN,CC,DB,DB2) :-     /* PRE */    type(NN,name),    type(CC,code),    \+(in_domain(NN,DB)),    /* THEN */    add_element((NN,CC),DB,DB2).update(NN,CC,DB,DB2) :-     /* PRE */    type(NN,name),    type(CC,code),    in_domain(NN,DB),    /* THEN */    override(DB,NN,CC,DB2).     trans(DB,add(NN,CC),DB2) :- type(name,NN),type(CC,code),add(NN,CC,DB,DB2).trans(DB,update(NN,CC),DB2) :- type(name,NN),type(CC,code),update(NN,CC,DB,DB2).prop(DB,unsafe) :- not_partial_function(DB).trace(DB,[]) :- print(DB),nl.trace(DB,[add(NN,CC)|T]) :- add(NN,CC,DB,DB2),trace(DB2,T).trace(DB,[update(NN,CC)|T]) :- update(NN,CC,DB,DB2),trace(DB2,T).unsafe(DB,[]) :- prop(DB,unsafe).unsafe(DB,[add(NN,CC)|T]) :- add(NN,CC,DB,DB2),unsafe(DB2,T).unsafe(DB,[update(NN,CC)|T]) :- update(NN,CC,DB,DB2),unsafe(DB2,T).