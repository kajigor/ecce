:- module(_,[register_config_file/1], [make, functions, assertions]).

:- use_module(library(lists)).
:- use_module(library(distutils)).
:- use_module(library('distutils/distclean')).
:- use_module(library(compiler), [use_module/1]).
:- use_module(library('make/system_extra')).
:- use_module(library('make/make_rt')).
:- use_module(library(aggregates)).

% :- initialization(initpaths).

:- comment(title, "Default installation makefile for use with lpdoc to
   generate readme files.").

:- comment(author, "Edison Mera").

initpaths :-
	(   get_value(filepath, F),
	    add_vpath(F),
	    fail
	;   get_value(systempath, S),
	    add_vpath(S),
	    fail
	;   true
	).

register_config_file(FileName) :-
%	use_module(FileName),
	dyn_load_cfg_module_into_make(FileName),
	initpaths.

readmes(Rs) :-
	get_value(readmetarget, R) ->
	findall(A, (get_value(component, C), atom_concat([R,'/',C],A)), Rs)
 ;      throw(error('readmetarget/1 must be defined')).

force <- [realclean, all] :- true.

all <- :-
	findall(C, get_value(component, C), Rs),
	make(Rs).

get_lpmakeopt(O) :-
	get_value(lpmakeopt, O),
	!.
get_lpmakeopt('').

distclean <- :-
	del_files_nofail(~ls('*.ascii')),
	(   get_value(component, C),
	    del_file_nofail(~atom_concat(C, '.pl')),
	    fail
	;   true
	),
	get_value(mainfile, MainFile),
	display(MainFile),nl,
	docsclean(MainFile).
% 	do([~setlocalciao, ' ', ~atom_concat(~lpmake),
% 	    ' -l distutils/installmkf ', ~get_lpmakeopt,
% 	    ' -m LPSETTINGS realclean'], fail).

realclean <- [distclean] :-
	readmes(Readmes),
	del_files_nofail(Readmes).

warning_autogen("[WARNING: do not edit, file automatically generated by "||
	"lpdoc2/texinfo]").

'pl' <= 'lpdoc' :: FileBase :-
	writef(~list_concat([
	":- use_package([assertions,pure]).\n",
	":- comment(title,\"",~atom_codes(FileBase),"\"). \n",
	":- comment(module,\"@", "include{",~atom_codes(FileBase),".lpdoc}\").\n",
	"main.\n"]), ~atom_concat(FileBase,'.pl')).

'ascii' <= 'pl' :: FileBase :-
	get_value(lpdoc2, [Dir, Name]),
	get_value(setlocalciao, SetLocalCiao),
	do([SetLocalCiao, ' ', Dir, Name, ' ', ~get_lpmakeopt, ' -c ',
	    FileBase, '.ascii'], fail).

'' <= 'ascii' :: FileBase :-
	atom_concat(FileBase, '.ascii', ReadmeS),
	readf(ReadmeS, I),
	get_value(readmetarget, R),
	atom_concat([R, '/', FileBase], ReadmeT),
	writef_list([~warning_autogen, "\n", I], ReadmeT).

% Readme <- :-
%  	readmes(Readmes),
%  	member(Readme, Readmes),
% 	!,
% 	atom_concat(Readme, '.ascii', ReadmeS),
% 	make(ReadmeS),
% 	readf(ReadmeS, I),
% 	writef_list([~warning_autogen, "\n", I], Readme).
